/*
 * Arduino Keypad calculator Program
 */
//#define ADDR_Ax 0b000 //A2, A1, A0
//#define ADDR (0b1010 << 3) + ADDR_Ax
#define ADDR 0b1010000

#include <LiquidCrystal.h> //Header file for LCD from https://www.arduino.cc/en/Reference/LiquidCrystal
#include <Keypad.h> //Header file for Keypad from https://github.com/Chris--A/Keypad
#include <Wire.h>
#include <SoftwareSerial.h>
const byte ROWS = 4; // Four rows
const byte COLS = 4; // Three columns
SoftwareSerial mySerial(18,19);

// Define the Keymap
char keys[ROWS][COLS] = {

  {'7','8','9','D'},

  {'4','5','6','C'},

  {'1','2','3','B'},

  {'*','0','#','A'}

};

byte rowPins[ROWS] = { 22, 23, 24, 25 };// Connect keypad ROW0, ROW1, ROW2 and ROW3 to these Arduino pins.
byte colPins[COLS] = { 26, 27, 28, 29 }; // Connect keypad COL0, COL1 and COL2 to these Arduino pins.

Keypad kpd = Keypad( makeKeymap(keys), rowPins, colPins, ROWS, COLS ); //  Create the Keypad

const int rs = 8, en = 9, d4 = 10, d5 = 11, d6 = 12, d7 = 13; //Pins to which LCD is connected
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

 long Num1,Number;
 long userName=1111;
 long password=2222;
 char key,action;
 boolean result = false;
 boolean a1 = false;
 boolean a2 = false;
 boolean a3 = false;
 boolean b1 = false;
 boolean b2 = false;
 boolean b3 = false;
 boolean c1 = false;
 boolean c2 = false;
 boolean c3 = false;
 
void setup() {
  mySerial.begin(9600);
  Serial1.begin(9600);
  Wire.begin();
  writeI2CByte(0xAC, 123);
  uint8_t temp1=readI2CByte(0xAC);
  mySerial.println(temp1);
  mySerial.println("test");
  lcd.begin(16, 2); //We are using a 16*2 LCD display
  pinMode(14,OUTPUT);
  pinMode(15,OUTPUT);
  pinMode(16,OUTPUT);
  pinMode(17,OUTPUT);
  pinMode(30,OUTPUT);
  pinMode(31,OUTPUT);
  pinMode(32,OUTPUT);
  pinMode(33,OUTPUT);
  pinMode(34,OUTPUT);
  
  digitalWrite(14,LOW);
  digitalWrite(15,LOW);
  digitalWrite(16,LOW);
  digitalWrite(17,LOW);
  digitalWrite(30,LOW);
  digitalWrite(31,LOW);
  digitalWrite(32,LOW);
  digitalWrite(33,LOW);
  digitalWrite(34,LOW);
  
  lcd.print("enter user/pass"); //Display a intro message
  lcd.setCursor(0, 1);   // set the cursor to column 0, line 1
  //lcd.print("mode"); //Display a intro message
  mySerial.write("start up");
  delay(2000); //Wait for display to show info
  lcd.clear(); //Then clean it
  
}

void loop() {
  
key = kpd.getKey(); //storing pressed key value in a char

if (key!=NO_KEY)
DetectButtons();

if (result==true)
CalculateResult();

DisplayResult();   
}

void DetectButtons()
{ 
    lcd.clear(); //Then clean it
    if (key=='*') //If cancel Button is pressed
    {mySerial.println ("Button Cancel"); 
    Number=Num1=0; 
    result=false;
    mode=0;
    timer=0;
    writeI2CByte(timeAdd,timer) ;
    writeI2CByte(modeAdd,mode );
    }
    
     if (key == '1') //If Button 1 is pressed
    {mySerial.println ("Button 1"); 
    if (Number==0)
    Number=1;
    else{
    long temp=Number;
    Number = (Number*10) + 1; //Pressed twice
    if (String(temp,DEC ).length()>=3){
      String temp1=String(temp,DEC);
      temp1 = temp1.substring(1, (temp1.length()))+String(1,DEC);
      Number=atol(temp1.c_str());
    }
    }
    }
    
     if (key == '4') //If Button 4 is pressed
    {mySerial.println ("Button 4"); 
    if (Number==0)
    Number=4;
    else{
    long temp=Number;
    Number = (Number*10) + 4; //Pressed twice
    if (String(temp,DEC ).length()>=3 ){
      String temp1=String(temp,DEC);
      temp1 = temp1.substring(1, (temp1.length()))+String(4,DEC);
      Number=atol(temp1.c_str());
    }
    }
    }
    
     if (key == '7') //If Button 7 is pressed
    {mySerial.println ("Button 7");
    if (Number==0)
    Number=7;
    else{
    long temp=Number;
    Number = (Number*10) + 7; //Pressed twice
    if (String(temp,DEC ).length()>=3 ){
      String temp1=String(temp,DEC);
      temp1 = temp1.substring(1, (temp1.length()))+String(7,DEC);
      Number=atol(temp1.c_str());
    }
    }
    }
  

    if (key == '0')
    {mySerial.println ("Button 0"); //Button 0 is Pressed
    if (Number==0)
    Number=0;
    else{
      
    long temp=Number;
    Number = (Number*10) + 0; //Pressed twice
    if (String(temp,DEC ).length()>=3 ){
      String temp1=String(temp,DEC);
      temp1 = temp1.substring(1, (temp1.length()))+String(0,DEC);
      Number=atol(temp1.c_str());
    }
    }
    }
    
     if (key == '2') //Button 2 is Pressed
    {mySerial.println ("Button 2"); 
     if (Number==0)
    Number=2;
    else{
    long temp=Number;
    
    Number = (Number*10) + 2; //Pressed twice
    if (String(temp,DEC ).length()>=3 ){
      String temp1=String(temp,DEC);
      temp1 = temp1.substring(1, (temp1.length()))+String(2,DEC);
      Number=atol(temp1.c_str());
    }
    }
    }
    
     if (key == '5')
    {mySerial.println ("Button 5"); 
     if (Number==0)
    Number=5;
    else{
    long temp=Number;
    
    Number = (Number*10) + 5; //Pressed twice
    if (String(temp,DEC ).length()>=3 ){
      String temp1=String(temp,DEC);
      temp1 = temp1.substring(1, (temp1.length()))+String(5,DEC);
      Number=atol(temp1.c_str());
    }
    }
    }
    
     if (key == '8')
    {mySerial.println ("Button 8"); 
     if (Number==0)
    Number=8;
    else{
    long temp=Number;
    Number = (Number*10) + 8; //Pressed twice
    if (String(temp,DEC ).length()>=3 ){
      String temp1=String(temp,DEC);
      temp1 = temp1.substring(1, (temp1.length()))+String(8,DEC);
      Number=atol(temp1.c_str());
    }
    }
    }   
  

    if (key == '#')
    {mySerial.println ("Button Equal"); 
    //Num2=Number;
    result = true;
    }
    
     if (key == '3')
    {mySerial.println ("Button 3"); 
     if (Number==0)
    Number=3;
    else
    {
    long temp=Number;
    
    Number = (Number*10) + 3; //Pressed twice
    if (String(temp,DEC ).length()>=3 ){
      String temp1=String(temp,DEC);
      temp1 = temp1.substring(1, (temp1.length()))+String(3,DEC);
      Number=atol(temp1.c_str());
    }
    }
    }
    
     if (key == '6')
    {mySerial.println ("Button 6"); 
    if (Number==0)
    Number=6;
    else{
    long temp=Number;
    
    Number = (Number*10) + 6; //Pressed twice
    if (String(temp,DEC ).length()>=3 ){
      String temp1=String(temp,DEC);
      temp1 = temp1.substring(1, (temp1.length()))+String(6,DEC);
      Number=atol(temp1.c_str());
    }
    }
    }
    
     if (key == '9')
    {mySerial.println ("Button 9");
    if (Number==0)
    Number=9;
    else{
    long temp=Number;
    
    Number = (Number*10) + 9; //Pressed twice
    if (String(temp,DEC ).length()>=3 ){
      String temp1=String(temp,DEC);
      temp1 = temp1.substring(1, (temp1.length()))+String(9,DEC);
      Number=atol(temp1.c_str());
    }
    }
    }  

      if (key == 'A' || key == 'B' || key == 'C' || key == 'D') //Detecting Buttons on Column 4
  {
    Num1 = Number;    
    Number =0;
    if (key == 'A')
    {mySerial.println ("Addition"); action = '+';}
     if (key == 'B')
    {mySerial.println ("Subtraction"); action = '-'; }
     if (key == 'C')
    {mySerial.println ("Multiplication"); action = '*';}
     if (key == 'D')
    {mySerial.println ("Devesion"); action = '/';}  

    delay(100);
  }
  
}

void CalculateResult()
{
  if(Num1>255)Num1=255;
  
  if (action=='+'){
    
    result=false;
   digitalWrite(14,HIGH);
   digitalWrite(15,LOW);
   digitalWrite(16,LOW);
   digitalWrite(17,LOW);
   Number=0;
   mode=1;
  writeI2CByte(timeAdd,timer) ;
  writeI2CByte(modeAdd,mode );
  
    
  }
    
  else if (action=='-'){
     digitalWrite(14,LOW);
   digitalWrite(15,HIGH);
   digitalWrite(16,LOW);
   digitalWrite(17,LOW);
   result=false;
   timer=Num1;
   Number=0;
   mode=2;
   writeI2CByte(timeAdd,timer) ;
   writeI2CByte(modeAdd,mode );
  
  }

  else if (action=='*'){
      digitalWrite(14,LOW);
   digitalWrite(15,LOW);
   digitalWrite(16,HIGH);
   digitalWrite(17,LOW);
    result=false;
    timer=Num1;
    Number=0;
   mode=3;
   writeI2CByte(timeAdd,timer) ;
   writeI2CByte(modeAdd,mode );
  }

  else if (action=='/'){
    result=false;
   digitalWrite(14,LOW);
   digitalWrite(15,LOW);
   digitalWrite(16,LOW);
   digitalWrite(17,HIGH);
   timer=Num1;
   Number=0;
   mode=4;
 
  }
}

void DisplayResult()
{
  
  lcd.setCursor(0, 0);   // set the cursor to column 0, line 1
  lcd.print(mode); lcd.print(action); lcd.print(timer);
  lcd.setCursor(0, 1);
  lcd.print(Number);
}